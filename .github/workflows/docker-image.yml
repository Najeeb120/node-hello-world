name: Build and Deploy Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests
      - name: Run tests
        run: npm test

      # SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Set up Docker Buildx for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: node-sample-demo:v2

      # Trivy scan for vulnerabilities in the Docker image
      - name: Trivy scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: node-sample-demo:v2
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
        continue-on-error: true  # Optionally skip failing pipeline on scan failure

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      # Push Docker image to Docker Hub
      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/node-sample-demo:v2
